/**
 *
 * This file is auto-generated. Do not edit manually: changes may be erased.
 * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
 * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
 * Aqua version: 0.9.1-374
 *
 */
import { FluencePeer } from '@fluencelabs/fluence';

import {
    callFunction$$,
    registerService$$,
} from '@fluencelabs/fluence/dist/internal/compilerSupport/v4.js';


// Services



export function registerOpString(...args) {
    registerService$$(
        args,
        {
    "defaultServiceId" : "op",
    "functions" : {
        "tag" : "labeledProduct",
        "fields" : {
            "concat_strings" : {
                "tag" : "arrow",
                "domain" : {
                    "tag" : "labeledProduct",
                    "fields" : {
                        "a" : {
                            "tag" : "scalar",
                            "name" : "string"
                        },
                        "b" : {
                            "tag" : "scalar",
                            "name" : "string"
                        },
                        "c" : {
                            "tag" : "scalar",
                            "name" : "string"
                        },
                        "d" : {
                            "tag" : "scalar",
                            "name" : "string"
                        },
                        "e" : {
                            "tag" : "scalar",
                            "name" : "string"
                        },
                        "f" : {
                            "tag" : "scalar",
                            "name" : "string"
                        }
                    }
                },
                "codomain" : {
                    "tag" : "unlabeledProduct",
                    "items" : [
                        {
                            "tag" : "scalar",
                            "name" : "string"
                        }
                    ]
                }
            },
            "identity" : {
                "tag" : "arrow",
                "domain" : {
                    "tag" : "labeledProduct",
                    "fields" : {
                        "s" : {
                            "tag" : "scalar",
                            "name" : "string"
                        }
                    }
                },
                "codomain" : {
                    "tag" : "unlabeledProduct",
                    "items" : [
                        {
                            "tag" : "scalar",
                            "name" : "string"
                        }
                    ]
                }
            }
        }
    }
}
    );
}
      
// Functions

export function checkPeer(...args) {

    let script = `
                    (xor
                     (seq
                      (seq
                       (seq
                        (seq
                         (seq
                          (call %init_peer_id% ("getDataSrv" "-relay-") [] -relay-)
                          (call %init_peer_id% ("getDataSrv" "targetPeer") [] targetPeer)
                         )
                         (call %init_peer_id% ("getDataSrv" "validatorPeers") [] validatorPeers)
                        )
                        (call %init_peer_id% ("getDataSrv" "timeout") [] timeout)
                       )
                       (new $reachability
                        (seq
                         (seq
                          (seq
                           (seq
                            (seq
                             (seq
                              (seq
                               (seq
                                (par
                                 (fold validatorPeers validator-0
                                  (par
                                   (new $targetStatus
                                    (new $validatorStatus
                                     (seq
                                      (seq
                                       (seq
                                        (seq
                                         (seq
                                          (par
                                           (seq
                                            (call -relay- ("op" "noop") [])
                                            (xor
                                             (seq
                                              (call validator-0 ("op" "identity") ["VALIDATOR REACHABLE"] $validatorStatus)
                                              (call -relay- ("op" "noop") [])
                                             )
                                             (seq
                                              (call -relay- ("op" "noop") [])
                                              (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 1])
                                             )
                                            )
                                           )
                                           (call %init_peer_id% ("peer" "timeout") [timeout "VALIDATOR NOT REACHABLE"] $validatorStatus)
                                          )
                                          (new $validatorStatus_test
                                           (seq
                                            (seq
                                             (seq
                                              (call %init_peer_id% ("math" "add") [0 1] validatorStatus_incr)
                                              (fold $validatorStatus s
                                               (seq
                                                (seq
                                                 (ap s $validatorStatus_test)
                                                 (canon %init_peer_id% $validatorStatus_test  #validatorStatus_iter_canon)
                                                )
                                                (xor
                                                 (match #validatorStatus_iter_canon.length validatorStatus_incr
                                                  (null)
                                                 )
                                                 (next s)
                                                )
                                               )
                                               (never)
                                              )
                                             )
                                             (canon %init_peer_id% $validatorStatus_test  #validatorStatus_result_canon)
                                            )
                                            (ap #validatorStatus_result_canon validatorStatus_gate)
                                           )
                                          )
                                         )
                                         (ap validatorStatus_gate.$.[0]! validatorStatus_gate-0)
                                        )
                                        (canon %init_peer_id% $validatorStatus  #validatorStatus_canon)
                                       )
                                       (call %init_peer_id% ("op" "identity") [#validatorStatus_canon] st)
                                      )
                                      (xor
                                       (match st.$.[0]! "VALIDATOR REACHABLE"
                                        (xor
                                         (seq
                                          (seq
                                           (seq
                                            (seq
                                             (seq
                                              (seq
                                               (par
                                                (seq
                                                 (seq
                                                  (call -relay- ("op" "noop") [])
                                                  (call validator-0 ("op" "noop") [])
                                                 )
                                                 (xor
                                                  (seq
                                                   (seq
                                                    (call targetPeer ("op" "identity") ["TARGET REACHABLE"] $targetStatus)
                                                    (call validator-0 ("op" "noop") [])
                                                   )
                                                   (call -relay- ("op" "noop") [])
                                                  )
                                                  (seq
                                                   (seq
                                                    (call validator-0 ("op" "noop") [])
                                                    (call -relay- ("op" "noop") [])
                                                   )
                                                   (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 2])
                                                  )
                                                 )
                                                )
                                                (call %init_peer_id% ("peer" "timeout") [timeout "TARGET NOT REACHABLE"] $targetStatus)
                                               )
                                               (new $targetStatus_test
                                                (seq
                                                 (seq
                                                  (seq
                                                   (call %init_peer_id% ("math" "add") [0 1] targetStatus_incr)
                                                   (fold $targetStatus s
                                                    (seq
                                                     (seq
                                                      (ap s $targetStatus_test)
                                                      (canon %init_peer_id% $targetStatus_test  #targetStatus_iter_canon)
                                                     )
                                                     (xor
                                                      (match #targetStatus_iter_canon.length targetStatus_incr
                                                       (null)
                                                      )
                                                      (next s)
                                                     )
                                                    )
                                                    (never)
                                                   )
                                                  )
                                                  (canon %init_peer_id% $targetStatus_test  #targetStatus_result_canon)
                                                 )
                                                 (ap #targetStatus_result_canon targetStatus_gate)
                                                )
                                               )
                                              )
                                              (ap targetStatus_gate.$.[0]! targetStatus_gate-0)
                                             )
                                             (new $targetStatus_test-0
                                              (seq
                                               (seq
                                                (seq
                                                 (call %init_peer_id% ("math" "add") [0 1] targetStatus_incr-0)
                                                 (fold $targetStatus s
                                                  (seq
                                                   (seq
                                                    (ap s $targetStatus_test-0)
                                                    (canon %init_peer_id% $targetStatus_test-0  #targetStatus_iter_canon-0)
                                                   )
                                                   (xor
                                                    (match #targetStatus_iter_canon-0.length targetStatus_incr-0
                                                     (null)
                                                    )
                                                    (next s)
                                                   )
                                                  )
                                                  (never)
                                                 )
                                                )
                                                (canon %init_peer_id% $targetStatus_test-0  #targetStatus_result_canon-0)
                                               )
                                               (ap #targetStatus_result_canon-0 targetStatus_gate-1)
                                              )
                                             )
                                            )
                                            (ap targetStatus_gate-1.$.[0]! targetStatus_gate-1-0)
                                           )
                                           (call %init_peer_id% ("op" "concat_strings") ["target " targetPeer " validator " validator-0 " status " targetStatus_gate-1-0] concat_strings)
                                          )
                                          (ap concat_strings $reachability)
                                         )
                                         (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 3])
                                        )
                                       )
                                       (seq
                                        (call %init_peer_id% ("op" "concat_strings") ["validator " validator-0 " relay " -relay- " status " "VALIDATOR NOT REACHABLE"] concat_strings-0)
                                        (ap concat_strings-0 $reachability)
                                       )
                                      )
                                     )
                                    )
                                   )
                                   (next validator-0)
                                  )
                                  (never)
                                 )
                                 (null)
                                )
                                (call %init_peer_id% ("op" "array_length") [validatorPeers] array_length-0)
                               )
                               (call %init_peer_id% ("math" "sub") [array_length-0 1] sub-0)
                              )
                              (call %init_peer_id% ("op" "array_length") [validatorPeers] array_length)
                             )
                             (call %init_peer_id% ("math" "sub") [array_length 1] sub)
                            )
                            (new $reachability_test
                             (seq
                              (seq
                               (seq
                                (call %init_peer_id% ("math" "add") [sub 1] reachability_incr)
                                (fold $reachability s
                                 (seq
                                  (seq
                                   (ap s $reachability_test)
                                   (canon %init_peer_id% $reachability_test  #reachability_iter_canon)
                                  )
                                  (xor
                                   (match #reachability_iter_canon.length reachability_incr
                                    (null)
                                   )
                                   (next s)
                                  )
                                 )
                                 (never)
                                )
                               )
                               (canon %init_peer_id% $reachability_test  #reachability_result_canon)
                              )
                              (ap #reachability_result_canon reachability_gate)
                             )
                            )
                           )
                           (ap reachability_gate.$.[sub-0]! reachability_gate-0)
                          )
                          (canon %init_peer_id% $reachability  #-reachability-fix-0)
                         )
                         (ap #-reachability-fix-0 -reachability-flat-0)
                        )
                       )
                      )
                      (xor
                       (call %init_peer_id% ("callbackSrv" "response") [-reachability-flat-0])
                       (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 4])
                      )
                     )
                     (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 5])
                    )
    `
    return callFunction$$(
        args,
        {
    "functionName" : "checkPeer",
    "arrow" : {
        "tag" : "arrow",
        "domain" : {
            "tag" : "labeledProduct",
            "fields" : {
                "targetPeer" : {
                    "tag" : "scalar",
                    "name" : "string"
                },
                "validatorPeers" : {
                    "tag" : "array",
                    "type" : {
                        "tag" : "scalar",
                        "name" : "string"
                    }
                },
                "timeout" : {
                    "tag" : "scalar",
                    "name" : "u32"
                }
            }
        },
        "codomain" : {
            "tag" : "unlabeledProduct",
            "items" : [
                {
                    "tag" : "array",
                    "type" : {
                        "tag" : "scalar",
                        "name" : "string"
                    }
                }
            ]
        }
    },
    "names" : {
        "relay" : "-relay-",
        "getDataSrv" : "getDataSrv",
        "callbackSrv" : "callbackSrv",
        "responseSrv" : "callbackSrv",
        "responseFnName" : "response",
        "errorHandlingSrv" : "errorHandlingSrv",
        "errorFnName" : "error"
    }
},
        script
    )
}
