name: Publish npm snapshot
description: |
  Publish npm packages snapshot to fluence registry

inputs:
  publish:
    description: "Publish snapshot"
    type: bool
    default: true
  working-directory:
    description: "Directory where to run the commands"
    type: string
    default: "${{ github.workspace }}"
  id:
    description: "Snapshot id"
    type: string
    required: true

outputs:
  version:
    description: "Version of published snapshot"
    value: "${{ steps.version.outputs.version }}"

runs:
  using: composite
  steps:
    - name: Check inputs
      shell: bash
      run: |
        if [[ "${{ inputs.id }}" == "" ]]; then
          echo "id input is empty"
          exit 1
        fi

    - name: Set package version
      id: version
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        # Set package version
        npm version prerelease --no-git-tag-version --preid ${{ inputs.id }}
        echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT
        echo "name=$(jq -r .name package.json)" >> $GITHUB_OUTPUT

    - name: Publish to self-hosted npm repo
      if: inputs.publish == 'true'
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: npm publish --tag snapshot --registry https://npm.fluence.dev

    - name: Print results to check summary
      if: inputs.publish == 'true'
      shell: bash
      env:
        VERSION: ${{ steps.version.outputs.version }}
        NAME: ${{ steps.version.outputs.name }}
      run: |
        # Print results to check summary
        echo "## npm snapshots" >> $GITHUB_STEP_SUMMARY
        cat <<SNAPSHOT >> $GITHUB_STEP_SUMMARY
        - [${{ env.NAME }}@${{ env.VERSION }}](https://npm.fluence.dev/-/web/detail/${{ env.NAME }}/v/${{ env.VERSION }})
        SNAPSHOT
