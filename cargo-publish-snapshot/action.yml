name: Publish crates snapshots
description: |
  Publish crates snapshots to fluence registry

inputs:
  path:
    description: "Path to directory with root Cargo.toml"
    type: string
    default: "./"
  publish:
    description: "Publish snapshots"
    type: bool
    default: true
  id:
    description: "Snapshot id"
    type: string
    required: true

outputs:
  version:
    description: "Version of published snapshots"
    value: "${{ steps.version.outputs.version }}"
  branch:
    description: "Sanitized branch name"
    value: "${{ steps.prepare.outputs.branch }}"

runs:
  using: composite
  steps:
    - name: Check inputs
      shell: bash
      run: |
        # Check inputs
        if [[ "${{ inputs.id }}" == "" ]]; then
          echo "id input is empty"
          exit 1
        fi

    - name: Install cargo-workspaces
      uses: baptiste0928/cargo-install@v2.0.0
      with:
        crate: cargo-workspaces
        version: 0.2.35

    - name: Set version to snapshot
      shell: bash
      working-directory: ${{ inputs.path }}
      run: |
        # Set version to snapshot
        cargo workspaces version \
          --pre-id "${{ inputs.id }}" \
          --force '*' \
          --no-git-commit \
          --exact \
          --all \
          -y prerelease

    - name: Setup python
      if: inputs.publish == 'true'
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install python dependencies
      if: inputs.publish == 'true'
      shell: bash
      run: |
        # Install python dependencies
        python -m pip install -r ${{ github.action_path }}/requirements.txt

    - name: Prepare for publishing
      working-directory: ${{ inputs.path }}
      if: inputs.publish == 'true'
      shell: bash
      run: |
        # Prepare for publishing
        # set registry to "fluence"
        # workaround for https://github.com/pksunkara/cargo-workspaces/issues/79
        cargo workspaces exec bash -c 'grep -q "publish = false" Cargo.toml || sed -i "/\[package\]/a publish = [\"fluence\"]" Cargo.toml'

        # set workspace dependencies registry to "fluence"
        cargo workspaces exec ${{ github.action_path }}/cargo-set-registry.py $(cargo workspaces list)

    - name: Publish snapshots to selfhosted registry
      if: inputs.publish == 'true'
      working-directory: ${{ inputs.path }}
      shell: bash
      env:
        RETRY: 2
      run: |
        # Publish snapshots to self-hosted registry
        if (($(cargo ws list | wc -l) > 1)); then
        while ((RETRY)); do
          cargo workspaces publish \
            --registry fluence \
            --no-git-commit \
            --from-git \
            --allow-dirty \
            --no-verify \
            -y prerelease
          ((RETRY--))
        done
        else
        cargo publish \
          --registry fluence \
          --allow-dirty \
          --no-verify
        fi

    - name: Get final snapshot version
      id: version
      working-directory: ${{ inputs.path }}
      shell: bash
      run: |
        # Get final snapshot version
        version=$(cargo metadata --no-deps --format-version 1 | jq -r ".workspace_members[0]" | cut -d ' ' -f 2)
        echo "version=${version}" >> $GITHUB_OUTPUT

    - name: Print results to check summary
      if: inputs.publish == 'true'
      working-directory: ${{ inputs.path }}
      shell: bash
      env:
        VERSION: ${{ steps.version.outputs.version }}
      run: |
        # Print results to check summary
        echo "## cargo snapshots" >> $GITHUB_STEP_SUMMARY
        while read -r crate; do
        cat <<SNAPSHOT >> $GITHUB_STEP_SUMMARY
        - [${crate}@${{ env.VERSION }}](https://crates.fluence.dev/#/crate?name=${crate}&version=${{ env.VERSION }})
        SNAPSHOT
        done < <(cargo workspaces list)
        cat <<'ACCESS' >> $GITHUB_STEP_SUMMARY
        ### Access to Fluence cargo registry
        ```
        cargo login --registry fluence $(vault read -filed=token kv/cargo-registry/users/dev)
        ```
        ACCESS
